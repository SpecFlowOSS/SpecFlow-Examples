'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by SpecFlow (http://www.specflow.org/).
'     SpecFlow Version:2.2.0.0
'     SpecFlow Generator Version:2.2.0.0
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------
#Region "Designer generated code"
'#pragma warning disable
Imports TechTalk.SpecFlow

Namespace Global.Specs
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.2.0.0"),  _
     System.Runtime.CompilerServices.CompilerGeneratedAttribute(),  _
     TechTalk.SpecRun.FeatureAttribute("Score Calculation", Description:="  In order to know my performance"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  As a player"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  I want the system to calculat"& _ 
        "e my total score", SourceFile:="ScoreCalculation.feature", SourceLine:=0)>  _
    Partial Public Class ScoreCalculationFeature
        
        Private testRunner As TechTalk.SpecFlow.ITestRunner
        
#ExternalSource("ScoreCalculation.feature",1)
#End ExternalSource
        
        <TechTalk.SpecRun.FeatureInitialize()>  _
        Public Overridable Sub FeatureSetup()
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner
            Dim featureInfo As TechTalk.SpecFlow.FeatureInfo = New TechTalk.SpecFlow.FeatureInfo(New System.Globalization.CultureInfo("en-US"), "Score Calculation", "  In order to know my performance"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  As a player"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  I want the system to calculat"& _ 
                    "e my total score", ProgrammingLanguage.VB, CType(Nothing,String()))
            testRunner.OnFeatureStart(featureInfo)
        End Sub
        
        <TechTalk.SpecRun.FeatureCleanup()>  _
        Public Overridable Sub FeatureTearDown()
            testRunner.OnFeatureEnd
            testRunner = Nothing
        End Sub
        
        Public Overridable Sub TestInitialize()
        End Sub
        
        <TechTalk.SpecRun.ScenarioCleanup()>  _
        Public Overridable Sub ScenarioTearDown()
            testRunner.OnScenarioEnd
        End Sub
        
        Public Overridable Sub ScenarioSetup(ByVal scenarioInfo As TechTalk.SpecFlow.ScenarioInfo)
            testRunner.OnScenarioStart(scenarioInfo)
        End Sub
        
        Public Overridable Sub ScenarioCleanup()
            testRunner.CollectScenarioErrors
        End Sub
        
        <TechTalk.SpecRun.ScenarioAttribute("Gutter game", SourceLine:=5)>  _
        Public Overridable Sub GutterGame()
            Dim scenarioInfo As TechTalk.SpecFlow.ScenarioInfo = New TechTalk.SpecFlow.ScenarioInfo("Gutter game", CType(Nothing,String()))
#ExternalSource("ScoreCalculation.feature",6)
Me.ScenarioSetup(scenarioInfo)
#End ExternalSource
#ExternalSource("ScoreCalculation.feature",7)
  testRunner.Given("a new bowling game", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Given ")
#End ExternalSource
#ExternalSource("ScoreCalculation.feature",8)
  testRunner.When("all of my balls are landing in the gutter", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "When ")
#End ExternalSource
#ExternalSource("ScoreCalculation.feature",9)
  testRunner.Then("my total score should be 0", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Then ")
#End ExternalSource
            Me.ScenarioCleanup
        End Sub
        
        <TechTalk.SpecRun.ScenarioAttribute("Beginners game", SourceLine:=10)>  _
        Public Overridable Sub BeginnersGame()
            Dim scenarioInfo As TechTalk.SpecFlow.ScenarioInfo = New TechTalk.SpecFlow.ScenarioInfo("Beginners game", CType(Nothing,String()))
#ExternalSource("ScoreCalculation.feature",11)
Me.ScenarioSetup(scenarioInfo)
#End ExternalSource
#ExternalSource("ScoreCalculation.feature",12)
  testRunner.Given("a new bowling game", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Given ")
#End ExternalSource
#ExternalSource("ScoreCalculation.feature",13)
  testRunner.When("I roll 2 and 7", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "When ")
#End ExternalSource
#ExternalSource("ScoreCalculation.feature",14)
  testRunner.And("I roll 3 and 4", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "And ")
#End ExternalSource
#ExternalSource("ScoreCalculation.feature",15)
  testRunner.And("I roll 8 times 1 and 1", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "And ")
#End ExternalSource
#ExternalSource("ScoreCalculation.feature",16)
  testRunner.Then("my total score should be 32", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Then ")
#End ExternalSource
            Me.ScenarioCleanup
        End Sub
        
        <TechTalk.SpecRun.ScenarioAttribute("Another beginners game", SourceLine:=17)>  _
        Public Overridable Sub AnotherBeginnersGame()
            Dim scenarioInfo As TechTalk.SpecFlow.ScenarioInfo = New TechTalk.SpecFlow.ScenarioInfo("Another beginners game", CType(Nothing,String()))
#ExternalSource("ScoreCalculation.feature",18)
Me.ScenarioSetup(scenarioInfo)
#End ExternalSource
#ExternalSource("ScoreCalculation.feature",19)
  testRunner.Given("a new bowling game", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Given ")
#End ExternalSource
#ExternalSource("ScoreCalculation.feature",20)
  testRunner.When("I roll the following series:"&Global.Microsoft.VisualBasic.ChrW(9)&"2,7,3,4,1,1,5,1,1,1,1,1,1,1,1,1,1,1,5,1", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "When ")
#End ExternalSource
#ExternalSource("ScoreCalculation.feature",21)
  testRunner.Then("my total score should be 40", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Then ")
#End ExternalSource
            Me.ScenarioCleanup
        End Sub
        
        <TechTalk.SpecRun.ScenarioAttribute("All Strikes", SourceLine:=22)>  _
        Public Overridable Sub AllStrikes()
            Dim scenarioInfo As TechTalk.SpecFlow.ScenarioInfo = New TechTalk.SpecFlow.ScenarioInfo("All Strikes", CType(Nothing,String()))
#ExternalSource("ScoreCalculation.feature",23)
Me.ScenarioSetup(scenarioInfo)
#End ExternalSource
#ExternalSource("ScoreCalculation.feature",24)
  testRunner.Given("a new bowling game", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Given ")
#End ExternalSource
#ExternalSource("ScoreCalculation.feature",25)
  testRunner.When("all of my rolls are strikes", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "When ")
#End ExternalSource
#ExternalSource("ScoreCalculation.feature",26)
  testRunner.Then("my total score should be 300", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Then ")
#End ExternalSource
            Me.ScenarioCleanup
        End Sub
        
        <TechTalk.SpecRun.ScenarioAttribute("One single spare", SourceLine:=27)>  _
        Public Overridable Sub OneSingleSpare()
            Dim scenarioInfo As TechTalk.SpecFlow.ScenarioInfo = New TechTalk.SpecFlow.ScenarioInfo("One single spare", CType(Nothing,String()))
#ExternalSource("ScoreCalculation.feature",28)
Me.ScenarioSetup(scenarioInfo)
#End ExternalSource
#ExternalSource("ScoreCalculation.feature",29)
   testRunner.Given("a new bowling game", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Given ")
#End ExternalSource
#ExternalSource("ScoreCalculation.feature",30)
   testRunner.When("I roll the following series: 2,8,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "When ")
#End ExternalSource
#ExternalSource("ScoreCalculation.feature",31)
   testRunner.Then("my total score should be 29", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Then ")
#End ExternalSource
            Me.ScenarioCleanup
        End Sub
        
        <TechTalk.SpecRun.ScenarioAttribute("All spares", SourceLine:=32)>  _
        Public Overridable Sub AllSpares()
            Dim scenarioInfo As TechTalk.SpecFlow.ScenarioInfo = New TechTalk.SpecFlow.ScenarioInfo("All spares", CType(Nothing,String()))
#ExternalSource("ScoreCalculation.feature",33)
Me.ScenarioSetup(scenarioInfo)
#End ExternalSource
#ExternalSource("ScoreCalculation.feature",34)
  testRunner.Given("a new bowling game", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Given ")
#End ExternalSource
#ExternalSource("ScoreCalculation.feature",35)
  testRunner.When("I roll 10 times 1 and 9", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "When ")
#End ExternalSource
#ExternalSource("ScoreCalculation.feature",36)
  testRunner.And("I roll 1", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "And ")
#End ExternalSource
#ExternalSource("ScoreCalculation.feature",37)
  testRunner.Then("my total score should be 110", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Then ")
#End ExternalSource
            Me.ScenarioCleanup
        End Sub
        
        <TechTalk.SpecRun.TestRunCleanup()>  _
        Public Overridable Sub TestRunCleanup()
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner.OnTestRunEnd
        End Sub
    End Class
End Namespace
'#pragma warning restore
#End Region
