// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.2.0.0
//      SpecFlow Generator Version:2.2.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Bowling.Specflow
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.2.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("Punkteberechnung", Description="  Als Spieler\r\n  Will ich, dass das System meine Punktezahl berechnet\r\n  Damit ic" +
        "h weiss wie gut ich bin", SourceFile="score_calculation.feature", SourceLine=3)]
    public partial class PunkteberechnungFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "score_calculation.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("de"), "Punkteberechnung", "  Als Spieler\r\n  Will ich, dass das System meine Punktezahl berechnet\r\n  Damit ic" +
                    "h weiss wie gut ich bin", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Keine Punkte", SourceLine=8)]
        public virtual void KeinePunkte()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Keine Punkte", ((string[])(null)));
#line 9
  this.ScenarioSetup(scenarioInfo);
#line 10
 testRunner.Given("eine neue Bowling Partie", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Gegeben sei ");
#line 11
 testRunner.When("alle meine Kugeln in der Seitenrinne landen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 12
 testRunner.Then("soll meine Punktzahl 0 sein", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Maximale Punkte", SourceLine=13)]
        public virtual void MaximalePunkte()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Maximale Punkte", ((string[])(null)));
#line 14
  this.ScenarioSetup(scenarioInfo);
#line 15
 testRunner.Given("eine neue Bowling Partie", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Gegeben sei ");
#line 16
 testRunner.When("ich alles Strikes werfe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 17
 testRunner.Then("soll meine Punktzahl 300 sein", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Keine Bonus-Würfe", SourceLine=18)]
        public virtual void KeineBonus_Wurfe()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Keine Bonus-Würfe", ((string[])(null)));
#line 19
  this.ScenarioSetup(scenarioInfo);
#line 20
    testRunner.Given("eine neue Bowling Partie", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Gegeben sei ");
#line 21
    testRunner.When("ich 2 und 7 werfe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 22
    testRunner.And("ich 3 und 4 werfe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 23
    testRunner.And("ich 8 mal 1 und 1 werfe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 24
 testRunner.Then("soll meine Punktzahl 32 sein", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Keine Bonus-Würfe (Version 2)", SourceLine=25)]
        public virtual void KeineBonus_WurfeVersion2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Keine Bonus-Würfe (Version 2)", ((string[])(null)));
#line 26
  this.ScenarioSetup(scenarioInfo);
#line 27
    testRunner.Given("eine neue Bowling Partie", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Gegeben sei ");
#line 28
    testRunner.When("ich die folgende Serie werfe:\t2,7,3,4,1,1,5,1,1,1,1,1,1,1,1,1,1,1,5,1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 29
 testRunner.Then("soll meine Punktzahl 40 sein", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alles Spares", SourceLine=30)]
        public virtual void AllesSpares()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Alles Spares", ((string[])(null)));
#line 31
  this.ScenarioSetup(scenarioInfo);
#line 32
    testRunner.Given("eine neue Bowling Partie", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Gegeben sei ");
#line 33
    testRunner.When("ich 10 mal 1 und 9 werfe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 34
 testRunner.And("ich 1 werfe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 35
 testRunner.Then("soll meine Punktzahl 110 sein", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Ein einziger Spare", SourceLine=36)]
        public virtual void EinEinzigerSpare()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Ein einziger Spare", ((string[])(null)));
#line 37
  this.ScenarioSetup(scenarioInfo);
#line 38
    testRunner.Given("eine neue Bowling Partie", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Gegeben sei ");
#line 39
    testRunner.When("ich die folgende Serie werfe:\t3,7,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 40
 testRunner.Then("soll meine Punktzahl 29 sein", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
